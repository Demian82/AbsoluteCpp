/*이 문제는 Steve Wolfman(https://nifty.stanford.edu/2006/wolfamn-pretid)에 의한 "Nifty Assignment"에 기반한다.
현실세계의 데이터들로부터 수의 목록들을 고려하여 보라.
예를 들어 각각 다른 수업 섹션에 등록한 학생 수의 목록, 페이스북ㅇ서의 각각 다른 상태 업데이트에 게시된 댓글 수의 목록, 각각 다른 도서관이 보유하고 있는 책 수의 목록, 선거구마다의 투표 수의 목록 등이 있다.
이것은 목록 내 각 수의 앞 숫자가 1~9로 동일한 확률로 배경될 것처럼 보인다. 그런데 Benford의 법칙은 앞의 숫자가 1이 나올 확률이 30%나 되어서 큰 숫자가 나올 확률을 떨어뜨린다고 언급한다.
앞의 숫자가 9일 확률은 고작 약 5%라고 한다.
Benford의 법칙을 테스트하는 프로그램을 작성하라. 현실세계로부터 데이터를 최소한 100개 이상 수집하고 텍스트 파일에 입력하라.
여러분의 프로그램은 반드시 루프를 통해서 리스트의 숫자에 1이 앞의 숫자로 몇 번이 나오는지, 2가 앞의 숫자로 몇 번이 나오는지 등을 세야한다.
각 숫자가 첫 번째 숫자로 나오는 확률을 백분율로 출력하여야 한다.
만일 여러분이 숫자를 strNum이라는 이름의 스트링 변수로 읽었다면 여러분은 char형으로서 strNum[0]을 사용해 첫 번쨰 숫자에 접근할 수 있다.
이것은 9장에서 더 자세히 다룬다.*/

#include <iostream>
using namespace std;

int main()
{

}